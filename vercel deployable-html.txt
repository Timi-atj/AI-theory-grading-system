<!-- index.html -->
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Demo Answer Marker</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body { padding: 2rem; }
    .result { margin-top: 1.5rem; }
  </style>
</head>
<body>
  <div class="container">
    <h2 class="mb-4">Answer Evaluation Demo</h2>

    <form id="eval-form">
      <div class="mb-3">
        <label class="form-label">Question</label>
        <textarea class="form-control" id="question" rows="2" required>In 12 words or fewer, explain the function of mitochondria.</textarea>
      </div>

      <div class="mb-3">
        <label class="form-label">Real Answer (Admin)</label>
        <textarea class="form-control" id="real_answer" rows="4" required>Mitochondria are the powerhouse of the cell, producing cellular energy.</textarea>
      </div>

      <div class="mb-3">
        <label class="form-label">Student Answer</label>
        <textarea class="form-control" id="student_answer" rows="4" required>Mitochondria create energy in cells.</textarea>
      </div>

      <div class="mb-3">
        <label class="form-label">Important Keywords (comma-separated)</label>
        <input class="form-control" id="keywords" value="mitochondria,energy,cells">
      </div>

      <button type="submit" class="btn btn-primary">Evaluate</button>
    </form>

    <div class="result alert alert-info d-none" id="result-box">
      <h4>Result</h4>
      <p><strong>Score:</strong> <span id="score"></span>/10</p>
      <p><strong>Grade:</strong> <span id="grade"></span></p>
      <p><strong>Feedback:</strong> <span id="feedback"></span></p>
    </div>
  </div>

  <script>
    const form = document.getElementById("eval-form");
    const resultBox = document.getElementById("result-box");

    form.addEventListener("submit", async function (e) {
      e.preventDefault();

      const question = document.getElementById("question").value;
      const modelAnswer = document.getElementById("real_answer").value;
      const studentAnswer = document.getElementById("student_answer").value;
      const keywords = document.getElementById("keywords").value
        .split(",")
        .map(k => k.trim())
        .filter(k => k);

      const keywordStr = keywords.length > 0 ? keywords.join(", ") : "None";

      const prompt = `
You are an exam grader. Grade the studentâ€™s answer based on:

1. The question asked
2. The model answer (as a reference)
3. The presence of these required keywords: ${keywordStr}

Your grading rules:
- The student MUST mention all important keywords or concepts listed.
- Do NOT rely solely on similarity to the model answer.
- Penalize any missing or incomplete keyword/concept clearly.
- You must extract which keywords were found vs missing.

Return:
- score (0 to 10, deduct for missing keywords)
- grade (A, B, C, D, F)
- feedback (brief, max 2 lines)
- found_keywords (list)
- missing_keywords (list)

Respond ONLY in this JSON format:
{
  "score": 6,
  "grade": "C",
  "feedback": "The student missed important terms like 'life'.",
  "found_keywords": ["study"],
  "missing_keywords": ["life"]
}

Now evaluate this:

Question: ${question}
Model Answer: ${modelAnswer}
Student Answer: ${studentAnswer}
Keywords: ${keywordStr}
`;

      try {
        const response = await fetch("https://openrouter.ai/api/v1/chat/completions", {
          method: "POST",
          headers: {
            "Authorization": "Bearer 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",  // ðŸ”¥ Replace with ENV variable in real use
            "HTTP-Referer": "http://localhost",
            "X-Title": "TheoryMarkerAI",
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            model: "mistralai/mistral-7b-instruct",
            messages: [
              { role: "user", content: prompt }
            ]
          })
        });

        const json = await response.json();
        const data = JSON.parse(json.choices[0].message.content);

        resultBox.classList.remove("d-none");
        document.getElementById("score").textContent = data.score;
        document.getElementById("grade").textContent = data.grade;
        document.getElementById("feedback").textContent = data.feedback;

      } catch (error) {
        alert("Error contacting API. Check your key and connection.");
        console.error(error);
      }
    });
  </script>
</body>
</html>
